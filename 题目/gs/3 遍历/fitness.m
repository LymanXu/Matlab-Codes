function f= fitness(position,ty,t1 )
%计算粒子群中每个个体的适应度，匹配度越高适应度越大
[m,n]=size(position);
f=zeros(m,1);
%真实影长序列
ylN=21;
%TrueYL=[[0.596304178533930;0.613199680749257;0.630367408481833;0.647875460424187;0.665585902488486;
 %   0.683635322043225;0.701982000906913;0.720666941763752;0.739737128587382;0.759056927444726;
  %  0.778809717593994;0.798909216833717;0.819460656164860;0.840359465052014;0.861691331039699;
   % 0.883486869022059;0.905746771747443;0.928488919149548;0.951811148887353;0.975598840114507;]1];
   %TrueYL=[1.14960000000000,1.18220000000000,1.21530000000000,1.24910000000000,1.28320000000000,1.31800000000000,1.35340000000000,1.38940000000000,1.42620000000000,1.46340000000000,1.50150000000000,1.54020000000000,1.57990000000000,1.62010000000000,1.66130000000000,1.70330000000000,1.74620000000000,1.79010000000000,1.83500000000000,1.88090000000000,1.92790000000000]
   
   %TrueYL=[0.163625315638982;0.168265351555676;0.172976553667411;0.177787388452203;0.182640922954021;0.187594090128896;0.192632656737821;0.197756622780795;0.202994454735836;0.208289219646909;0.213712083709057;0.219220347205255;0.224870943091535;0.230592705172856;0.236456799644260;0.242434760027730;0.248540819562275;0.254789211486902;0.261179935801612;0.267712992506404;0.274402614840287];

   TrueYL=ty;
   %YingL=zeros(m,ylN);
for i=1:m
%计算该离子对应的影长序列
w=position(i,1);j=position(i,2);chi=position(i,3);
%flag0=0时，说明该点不合理f=0
[flag0,YingLI]=CalculateYingL(w,j,chi,t1);
%求该影长序列和真实序列的匹配度
%记录影子长度序列
%YingL(i,:)=YingLT';
%第 1 种比较相似函数
%ylMax=max(YingLI);
%newYL=YingLI/ylMax;
%distance=(newYL-TrueYL).^2;
%f(i,1)=1/sum(distance);
valueCheng=chengFa2(w,j,chi);%计算是否在范围内
%加入惩罚函数
if flag0==1&&valueCheng==0
%xx=sum(YingLI.*TrueYL);
%x1L=(sum(YingLI.^2))^0.5;
%x2L=(sum(TrueYL.^2))^0.5;
%f(i,1)=xx/(x1L*x2L);
%借鉴Toptic法
fangtyl=(sum(YingLI.^2)).^0.5;
z=YingLI./fangtyl;
d=(sum((TrueYL-z).^2)).^0.5;
%d 越小，越相似，适应度越大
f(i,1)=1/d;
else
    f(i,1)=0;
end
%用相关函数
%FI=corrcoef(YingLI,TrueYL);
%f(i,1)=FI(1,2);
end

end

